{"name":"Kaggle whatscooking","tagline":"Kaggle Competition - WhatsCooking - Multiclass Problem to predict cuisine type","body":"#Case Study on Kaggle _ Whats Cooking\r\nThis is a fun learning competition from kaggle on predicting the dish's cuisine type with the set of provided ingredients. \r\n##A  Brief Description of this Problem: \r\nIf you're in Northern California, you'll be walking past the inevitable bushels of leafy greens, spiked with dark purple kale and the bright pinks and yellows of chard. Across the world in South Korea, mounds of bright red kimchi greet you, while the smell of the sea draws your attention to squids squirming nearby. India’s market is perhaps the most colorful, awash in the rich hues and aromas of dozens of spices: turmeric, star anise, poppy seeds, and garam masala as far as the eye can see.\r\n         So, with the given list of ingredients, predicting the dish's cuisine is our challenge.\r\n\r\n## Data Analysis and Modelling.\r\n The training set is provided as JSON File which needs to be processed so it can be workable in R. The JSON file was converted in to a dataset using JSONLITE package functions. Several Text processing were done on this dataset to assign each ingredient as a variable in the dataset. Similar processing had to be done on the test set as well so the predicted models can be applied to the test set.On looking at the training dataset, the Italian cuisine has got maximum occurrence. This is just an initial picture of what the train set look like. With this, several models were applied on the data to find the accuracy of predictions.\r\nhttps://github.com/prsshini/Kaggle_WhatsCooking/blob/master/Results/Training%20Set%20Plot.png?raw=true\r\n## Models applied on Whatscooking Data:\r\n### RPART: As always, started with basic decision tree which can perform only upto ~60% Accuracy. Functions were used to find the best cp values. But The complexity parameter was found to be too low. On risk of overfitting the model, moved to next model...  \r\n\r\n###Random Forest: When applying the random\r\n\r\n\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}